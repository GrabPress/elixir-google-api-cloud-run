# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudRun.V1alpha1.Model.SecurityContext do
  @moduledoc """
  SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.

  ## Attributes

  - allowPrivilegeEscalation (boolean()): AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN +optional Defaults to: `null`.
  - capabilities (Capabilities): The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. +optional Defaults to: `null`.
  - privileged (boolean()): Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. +optional Defaults to: `null`.
  - readOnlyRootFilesystem (boolean()): Whether this container has a read-only root filesystem. Default is false. +optional Defaults to: `null`.
  - runAsGroup (String.t): The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. +optional Defaults to: `null`.
  - runAsNonRoot (boolean()): Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. +optional Defaults to: `null`.
  - runAsUser (String.t): The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. +optional Defaults to: `null`.
  - seLinuxOptions (SeLinuxOptions): The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. +optional Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowPrivilegeEscalation => any(),
          :capabilities => GoogleApi.CloudRun.V1alpha1.Model.Capabilities.t(),
          :privileged => any(),
          :readOnlyRootFilesystem => any(),
          :runAsGroup => any(),
          :runAsNonRoot => any(),
          :runAsUser => any(),
          :seLinuxOptions => GoogleApi.CloudRun.V1alpha1.Model.SeLinuxOptions.t()
        }

  field(:allowPrivilegeEscalation)
  field(:capabilities, as: GoogleApi.CloudRun.V1alpha1.Model.Capabilities)
  field(:privileged)
  field(:readOnlyRootFilesystem)
  field(:runAsGroup)
  field(:runAsNonRoot)
  field(:runAsUser)
  field(:seLinuxOptions, as: GoogleApi.CloudRun.V1alpha1.Model.SeLinuxOptions)
end

defimpl Poison.Decoder, for: GoogleApi.CloudRun.V1alpha1.Model.SecurityContext do
  def decode(value, options) do
    GoogleApi.CloudRun.V1alpha1.Model.SecurityContext.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudRun.V1alpha1.Model.SecurityContext do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
