# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudRun.V1alpha1.Model.DomainMappingSpec do
  @moduledoc """
  The desired state of the Domain Mapping.

  ## Attributes

  - certificateMode (String.t): The mode of the certificate. Defaults to: `null`.
    - Enum - one of [CERTIFICATE_MODE_UNSPECIFIED, NONE, AUTOMATIC]
  - forceOverride (boolean()): If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning. Defaults to: `null`.
  - routeName (String.t): The name of the Knative Route that this DomainMapping applies to. The route must exist. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :certificateMode => any(),
          :forceOverride => any(),
          :routeName => any()
        }

  field(:certificateMode)
  field(:forceOverride)
  field(:routeName)
end

defimpl Poison.Decoder, for: GoogleApi.CloudRun.V1alpha1.Model.DomainMappingSpec do
  def decode(value, options) do
    GoogleApi.CloudRun.V1alpha1.Model.DomainMappingSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudRun.V1alpha1.Model.DomainMappingSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
